{"version":3,"sources":["componenets/Profile/Profile.module.css","componenets/Stats/Stats.module.css","componenets/Profile/UserStats.module.css","componenets/Profile/UserStats.jsx","componenets/Profile/Profile.jsx","componenets/Stats/StatsBlia.jsx","componenets/App.jsx","index.js"],"names":["module","exports","UserStats","label","quantity","className","stylesStats","stat","Profile","info","stylesProfile","profile","description","src","avatar","alt","name","tag","location","stats","followers","toLocaleString","views","likes","defaultProps","Stats","title","statProps","statsSection","statList","map","shadowOfGrey","Math","floor","random","statItem","key","id","style","backgroundColor","color","percentage","App","user","statInfo","ReactDOM","render","document","getElementById"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,KAAO,sBAAsB,IAAM,qBAAqB,SAAW,0BAA0B,MAAQ,yB,gBCAtOD,EAAOC,QAAU,CAAC,aAAe,4BAA4B,MAAQ,qBAAqB,SAAW,wBAAwB,SAAW,wBAAwB,MAAQ,qBAAqB,WAAa,4B,gBCA1MD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,MAAQ,yBAAyB,SAAW,8B,inBCgB9EC,EAZG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OAChB,wBAAIC,UAAWC,IAAYC,MACzB,0BAAMF,UAAWC,IAAYH,OAAQA,GACrC,0BAAME,UAAWC,IAAYF,UAAWA,K,gBCFtCI,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACd,yBAAKJ,UAAWK,IAAcC,SAC5B,yBAAKN,UAAWK,IAAcE,aAC5B,yBACEC,IAAKJ,EAAKK,OACVC,IAAI,cACJV,UAAWK,IAAcI,SAE3B,uBAAGT,UAAWK,IAAcM,MAAOP,EAAKO,MACxC,uBAAGX,UAAWK,IAAcO,KAAMR,EAAKQ,KACvC,uBAAGZ,UAAWK,IAAcQ,UAAWT,EAAKS,WAG9C,wBAAIb,UAAWK,IAAcS,OAC3B,kBAAC,EAAD,CACEhB,MAAM,YACNC,SAAUK,EAAKU,MAAMC,UAAUC,mBAEjC,kBAAC,EAAD,CAAWlB,MAAM,QAAQC,SAAUK,EAAKU,MAAMG,MAAMD,mBACpD,kBAAC,EAAD,CAAWlB,MAAM,QAAQC,SAAUK,EAAKU,MAAMI,MAAMF,sBAK1Db,EAAQgB,aAAe,CACrBf,KAAM,CACJO,KAAM,0BAeKR,Q,gBC3CTiB,EAAQ,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,UAAV,OACZ,6BAAStB,UAAWC,IAAYsB,cAC7BF,GAAS,wBAAIrB,UAAWC,IAAYoB,OAAQA,GAE7C,wBAAIrB,UAAWC,IAAYuB,UACxBF,EAAUG,IAAI,SAAAvB,GACb,IAAMwB,EAA+C,GAAhCC,KAAKC,MAAsB,EAAhBD,KAAKE,UACrC,OACE,wBACE7B,UAAWC,IAAY6B,SACvBC,IAAK7B,EAAK8B,GACVC,MAAO,CACLC,gBAAgB,OAAD,OAASR,EAAT,aAA0BA,EAA1B,aAA2CA,EAA3C,KACfS,MAAM,OAAD,OAAS,IAAMT,EAAf,aAAgC,IAAMA,EAAtC,aAAuD,IAC1DA,EADG,OAIP,0BAAM1B,UAAWC,IAAYH,OAAQI,EAAKJ,OAC1C,0BAAME,UAAWC,IAAYmC,YAAalC,EAAKkC,WAA/C,WAQZhB,EAAMD,aAAe,CACnBE,MAAO,IAcMD,Q,cC5BAiB,EAPH,kBACV,oCACE,kBAAC,EAAD,CAASjC,KAAMkC,IACf,kBAAC,EAAD,CAAOjB,MAAM,eAAeC,UAAWiB,MCT3CC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.630b7378.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2ElJ-\",\"description\":\"Profile_description__2zIvL\",\"avatar\":\"Profile_avatar__114wS\",\"name\":\"Profile_name__23SgI\",\"tag\":\"Profile_tag__1rUMz\",\"location\":\"Profile_location__1TSCs\",\"stats\":\"Profile_stats__2o8h4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsSection\":\"Stats_statsSection__1klbq\",\"title\":\"Stats_title__35Bvo\",\"statList\":\"Stats_statList__2UCOF\",\"statItem\":\"Stats_statItem__2oNgz\",\"label\":\"Stats_label__2PNMI\",\"percentage\":\"Stats_percentage__1yCq8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stat\":\"UserStats_stat__1yg7j\",\"label\":\"UserStats_label__3_grk\",\"quantity\":\"UserStats_quantity__A_Pld\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport stylesStats from './UserStats.module.css';\n\nconst UserStats = ({ label, quantity }) => (\n  <li className={stylesStats.stat}>\n    <span className={stylesStats.label}>{label}</span>\n    <span className={stylesStats.quantity}>{quantity}</span>\n  </li>\n);\n\nUserStats.propTypes = {\n  label: PropTypes.string.isRequired,\n  quantity: PropTypes.string.isRequired,\n};\n\nexport default UserStats;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport UserStats from './UserStats';\n\nimport stylesProfile from './Profile.module.css';\n\nconst Profile = ({ info }) => (\n  <div className={stylesProfile.profile}>\n    <div className={stylesProfile.description}>\n      <img\n        src={info.avatar}\n        alt=\"info avatar\"\n        className={stylesProfile.avatar}\n      />\n      <p className={stylesProfile.name}>{info.name}</p>\n      <p className={stylesProfile.tag}>{info.tag}</p>\n      <p className={stylesProfile.location}>{info.location}</p>\n    </div>\n\n    <ul className={stylesProfile.stats}>\n      <UserStats\n        label=\"Followers\"\n        quantity={info.stats.followers.toLocaleString()}\n      />\n      <UserStats label=\"Views\" quantity={info.stats.views.toLocaleString()} />\n      <UserStats label=\"Likes\" quantity={info.stats.likes.toLocaleString()} />\n    </ul>\n  </div>\n);\n\nProfile.defaultProps = {\n  info: {\n    name: 'USER NAME IS REQUIRED',\n  },\n};\n\nProfile.propTypes = PropTypes.shape({\n  // name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    quantity: PropTypes.string.isRequired,\n  }).isRequired,\n}).isRequired;\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport stylesStats from './Stats.module.css';\n\nconst Stats = ({ title, statProps }) => (\n  <section className={stylesStats.statsSection}>\n    {title && <h2 className={stylesStats.title}>{title}</h2>}\n\n    <ul className={stylesStats.statList}>\n      {statProps.map(stat => {\n        const shadowOfGrey = Math.floor(Math.random() * 6) * 50;\n        return (\n          <li\n            className={stylesStats.statItem}\n            key={stat.id}\n            style={{\n              backgroundColor: `rgb(${shadowOfGrey}, ${shadowOfGrey}, ${shadowOfGrey})`,\n              color: `rgb(${255 - shadowOfGrey}, ${255 - shadowOfGrey}, ${255 -\n                shadowOfGrey})`,\n            }}\n          >\n            <span className={stylesStats.label}>{stat.label}</span>\n            <span className={stylesStats.percentage}>{stat.percentage}%</span>\n          </li>\n        );\n      })}\n    </ul>\n  </section>\n);\n\nStats.defaultProps = {\n  title: '',\n};\n\nStats.propTypes = {\n  title: PropTypes.string,\n  statProps: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number,\n    }),\n  ).isRequired,\n};\n\nexport default Stats;\n","import React from 'react';\n\nimport Profile from './Profile/Profile';\nimport Stats from './Stats/StatsBlia';\n// import PricingItem from './PricingItem/PricingItem';\n// import TransactionHistory from './TransactionHistory/TransactionHistory';\n\nimport user from './Profile/user.json';\nimport statInfo from './Stats/Stats.json';\n\nconst App = () => (\n  <>\n    <Profile info={user} />\n    <Stats title=\"Upload stats\" statProps={statInfo} />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './componenets/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}